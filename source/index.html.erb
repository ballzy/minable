---
title: Minable - Home
---
<div class="min-g">
  <section class="min-u-1 hero-banner">
    <div class="min-inner">
      <div class="demo-grid">
        <div class="min-g">
          <div class="min-u-1-2 min-u-m-1-3 min-u-s-1-2"><div class="min-inner box"></div></div>
          <div class="min-u-1-4 min-u-m-2-3 min-u-s-1-2"><div class="min-inner box"></div></div>
          <div class="min-u-1-4 min-u-m-1 min-u-s-1"><div class="min-inner box"></div></div>

          <div class="min-u-2-5 min-u-m-2-3 min-u-s-1"><div class="min-inner box"></div></div>
          <div class="min-u-1-5 min-u-m-1-3 min-u-s-1-2"><div class="min-inner box"></div></div>
          <div class="min-u-2-5 min-u-m-1 min-u-s-1-2"><div class="min-inner box"></div></div>
        </div>
      </div>
    </div>
  </section>
</div>

<div class="min-container">
  <div class="min-g">
    <section class="min-u-1 text-centered content-home-block">
      <div class="min-inner">
        <h1>What is minable?</h1>
        <p>Minable is a minimal CSS framework written in SCSS. It's based on Yahoo's <a href="http://purecss.io/">Pure CSS</a> and thoughtbot's <a href="http://bourbon.io" target="_blank">Bourbon</a>.</p>

        <p class="text-color-morning"><strong>Minable is very early in development, expect breaking changes in the near future. More documentation and examples coming soon.</strong></p>

        <span>Supported on:</span>
        <ul class="no-bullets horizontal-list">
          <li><%= image_tag("icon-firefox.png", :class => "browser-icon", :alt => "Firefox logo") %></li>
          <li><%= image_tag("icon-chrome.png", :class => "browser-icon", :alt => "Chrome logo") %></li>
          <li><%= image_tag("icon-safari.png", :class => "browser-icon", :alt => "Safari logo") %></li>
          <li><%= image_tag("icon-ie.png", :class => "browser-icon", :alt => "Internet Explorer logo") %></li>
        </ul>

        <a href="https://github.com/bolser/minable" target="_blank"><button class="btn-github min-button text-centered bg-lightGreen">View on GitHub</button></a>
      </div>
    </section>

    <section class="min-u-1 text-centered content-home-block">
      <div class="min-inner">
        <h2>How it works</h2>

        <p>The markup for <strong>minable</strong> is simple, here is a typical layout:</p>

        <div class="min-g">
          <div class="min-u-1-2 min-u-m-1">
          <div class="min-inner">
              <pre class="text-left">
      &lt;div class="<strong><span class="text-color-lightGreen">min-container</span></strong>"&gt;
        &lt;div class="<strong><span class="text-color-lightGreen">min-g</span></strong>"&gt;
          &lt;div class="<strong><span class="text-color-lightGreen">min-u-1-4</span></strong>"&gt;
            &lt;div class="<strong><span class="text-color-lightGreen">min-inner</span></strong>"&gt;
              Content
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="<strong><span class="text-color-lightGreen">min-u-3-4</span></strong>"&gt;
            &lt;div class="<strong><span class="text-color-lightGreen">min-inner</span></strong>"&gt;
              Content
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;</pre>
            </div>
          </div>
          <div class="min-u-1-2 min-u-m-1">
            <div class="min-inner">
              <ul class="text-left list-centered">
                <li><strong class="text-color-lightGreen">.min-container</strong> - <em>Optional</em> wrapper which sets the max grid width.</li>
                <li><strong class="text-color-lightGreen">.min-g</strong> - Minable row.</li>
                <li><strong class="text-color-lightGreen">.min-u-1-4</strong> - Minable unit class, for a full list <a href="#">click here</a>.</li>
                <li><strong class="text-color-lightGreen">.min-inner</strong> - The inner unit sets the gutter.</li>
              </ul>

              <p class="text-left">While this method requires more markup, it allows compatibility with IE7 out of the box. We are working on an option to disable legacy support to allow for cleaner markup if not required.</p>
            </div>
          </div>
        </div>
      </div>
    </section>

    <section class="min-u-1 text-centered content-home-block">
      <div class="min-inner">
        <h2>Customising your grid</h2>

        <p>The focus of <strong>minable</strong> is to be flexible. To customise your grid open <em>_settings.scss</em>, here you have a variety of options available.</p>

        <p><em>We will be adding more detailed instructions shortly however for now, go take a look.</em></p>

        <h3>Adding additional breakpoints</h3>
        <p><strong>Minable</strong> supports additional breakpoints, by default it comes with medium <em>(767px)</em> and small <em>(430px)</em> breakpoints.</p>

        <pre><span class="text-color-darkGreen">$break-m</span>: 767px;
    <span class="text-color-darkGreen">$break-s</span>: 430px;

    $breakpoints: <span class="text-color-morning">m</span> <span class="text-color-darkGreen">$break-m<span>, <span class="text-color-morning">s</span> <span class="text-color-darkGreen">$break-s</span>;</pre>

        <p><em>$breakpoints</em> supports multiple, comma separated breakpoints. Each requires a name and size in pixels. The generated classes take the form:</p>

        <pre>.min-u-<em><span class="text-color-morning">name</span></em>-1-4</pre>

        <p>Assigning <em>$breakpoints: false;</em> will disable addition breakpoint classes.</p>

      </div>
    </section>
  </div>
</div>
